{
    "version": "https://jsonfeed.org/version/1",
    "title": "Meteorshower_Y • All posts by \"模板\" tag",
    "description": "",
    "home_page_url": "https://meteorshower-y.github.io",
    "items": [
        {
            "id": "https://meteorshower-y.github.io/2022/11/14/%E5%BF%AB%E8%AF%BB/",
            "url": "https://meteorshower-y.github.io/2022/11/14/%E5%BF%AB%E8%AF%BB/",
            "title": "快读",
            "date_published": "2022-11-14T09:09:33.598Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wdGlsb3BzaXN3LmdpdGh1Yi5pby8yMDIyLzA4LzA5LyVFNSVCRiVBQiVFOCVBRiVCQiVFNSVCRiVBQiVFNSU4NiU5OSVFNiU5RCVCRiVFNSVBRCU5MC8=\">Ptilopsis_w 快读</span>的简化版（）</p>\n<h2 id=\"v-10\"><a class=\"anchor\" href=\"#v-10\">#</a> V 1.0</h2>\n<p>支持整数读入，单字符和字符串读入，支持多参读入，如果读字符串只能一次传一个参。</p>\n<h3 id=\"example\"><a class=\"anchor\" href=\"#example\">#</a> Example</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">char</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> b<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">char</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"完整版code\"><a class=\"anchor\" href=\"#完整版code\">#</a> 完整版 Code</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> Aniciry</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> READSIZE <span class=\"token operator\">=</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">char</span> ibuf<span class=\"token punctuation\">[</span>READSIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p1<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p2<span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">isseen</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">isspace</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">&lt;=</span> <span class=\"token number\">32</span> <span class=\"token operator\">and</span> ch <span class=\"token operator\">!=</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">isdigit</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">>=</span> </span><span class=\"token char\">'0'</span> <span class=\"token expression\"><span class=\"token operator\">and</span> ch <span class=\"token operator\">&lt;=</span> </span><span class=\"token char\">'9'</span><span class=\"token expression\"><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">getchar</span><span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p1<span class=\"token operator\">==</span>p2<span class=\"token punctuation\">)</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span>p2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p1<span class=\"token operator\">=</span>ibuf<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span>ibuf<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>READSIZE<span class=\"token punctuation\">,</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p1<span class=\"token operator\">==</span>p2<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p1<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">auto</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>T <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isdigit</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> ch <span class=\"token operator\">!=</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">isdigit</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> x <span class=\"token operator\">=</span> x<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>ch<span class=\"token operator\">-</span><span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">auto</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">isspace</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> x <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">auto</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">isspace</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">isseen</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>s <span class=\"token operator\">=</span> ch<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>s<span class=\"token punctuation\">,</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token operator\">*</span>s <span class=\"token operator\">=</span> <span class=\"token char\">'\\000'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>T1<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">auto</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>T <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> T1 <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>other<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> Aniciry<span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "模板"
            ]
        }
    ]
}